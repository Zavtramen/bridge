{
    "logoLabel": "Bridge",
    "connectWallet": "Connect Wallet",
    "testnetMessage": "This is the testnet version",
    "providers": {
        "metamask": "Metamask",
        "walletConnect": "WalletConnect",
        "walletLink": "Coinbase Wallet"
    },
    "networks": {
        "ton": {
            "currency": "Toncoin",
            "transactionCompleted": "TON transaction completed successfully",
            "transactionSend1": "Please send ",
            "transactionSend2": "Toncoin to the address",
            "transactionSendComment": "with the comment",
            "openWallet": "Open Wallet",
            "generateQRCode": "Generate QR Code",
            "scanQRCode": "or scan QR code below",
            "errors": {
                "invalidAddress": "Not valid TON address"
            },
            "main": {
                "name": "The Open Network",
                "nameSwitcher": "The Open\nNetwork",
                "nameShort": "TON",
                "coin": "Toncoin",
                "coinShort": "Toncoin"
            },
            "test" : {
                "name": "TON Testnet",
                "nameSwitcher": "TON\nTestnet",
                "nameShort": "TON",
                "coin": "Toncoin",
                "coinShort": "Toncoin"
            }
        },
        "eth": {
            "currency": "ETH",
            "pageTitle": "TON-ETH Bridge",
            "gasFee": "Ethereum gas fee ~ <FEE> ETH",
            "transactionCompleted": "Ethereum transaction completed successfully",
            "transactionWait": "Please wait for the Ethereum transaction to be processed",
            "transactionSend": "Please send Ethereum transaction in <PROVIDER>",
            "blocksConfirmations": "Collected <COUNT> Ethereum block confirmations",
            "errors": {
                "invalidAddress": "Not valid ETH address",
                "lowBalance": "You need to have ETH on your wallet to pay for gas in the Ethereum network"
            },
            "main": {
                "name": "Ethereum Network",
                "nameSwitcher": "Ethereum\nNetwork",
                "nameShort": "ETH",
                "coin": "TONCOIN (ERC20)",
                "coinShort": "TONCOIN"
            },
            "test" : {
                "name": "Ethereum Ropsten",
                "nameSwitcher": "Ethereum\nRopsten",
                "nameShort": "ETH",
                "coin": "TONCOIN (ERC20)",
                "coinShort": "TONCOIN"
            }
        },
        "bsc": {
            "currency": "BNB",
            "pageTitle": "TON-BSC Bridge",
            "gasFee": "BSC gas fee ~ <FEE> BNB",
            "transactionCompleted": "BSC transaction completed successfully",
            "transactionWait": "Please wait for the BSC transaction to be processed",
            "transactionSend": "Please send BSC transaction in <PROVIDER>",
            "blocksConfirmations": "Collected <COUNT> BSC block confirmations",
            "errors": {
                "invalidAddress": "Not valid BSC address",
                "lowBalance": "You need to have BNB on your wallet to pay for gas in the BSC network"
            },
            "main": {
                "name": "Binance Smart Chain",
                "nameSwitcher": "Binance\nSmart Chain",
                "nameShort": "BSC",
                "coin": "TONCOIN (BEP-20)",
                "coinShort": "TONCOIN"
            },
            "test" : {
                "name": "BSC Testnet",
                "nameSwitcher": "BSC\nTestnet",
                "nameShort": "BSC",
                "coin": "TONCOIN (BEP-20)",
                "coinShort": "TONCOIN"
            }
        }
    },
    "sendToken": "Asset",
    "amountOfTon": "Amount of TON",
    "addressInputLabel": "Destination address",
    "willReceive": "You will receive <FEE> <COIN>",
    "bridgeFeeAbove10": "Bridge fee - <FEE> TON",
    "bridgeFeeBelow10": "Bridge fee - 5 TON + 0.25% of amount",
    "sourceCode": "Source Code",
    "howItWorks": "How it works",
    "documentation": "Documentation",

    "transferHistory": "History",
    "disconnectWallet": "Disconnect",

    "transfer": "Transfer",
    "getToncoin": "Get TONCOIN",
    "done": "Done",
    "cancel": "Cancel",

    "blocksConfirmationsCollected": "The confirmations of the blocks are collected",
    "blocksConfirmationsWaiting": "Wait a bit for the blocks confirmations",
    "oraclesConfirmations": "Collected <COUNT> confirmations of oracles",
    "oraclesConfirmationsCollected": "The confirmations of the oracles are collected",
    "oraclesConfirmationsWaiting": "Wait a bit for the oracles to confirm the transfer",
    "getCoinsByProvider": "Get <TO_COIN>s by <PROVIDER>",
    "coinsSent": "<TO_COIN>s have been sent to your address",
    "getCoins": "Get <TO_COIN>s in <TO_NETWORK>",

    "errors": {
        "alertTitleError": "Error",
        "alertButtonClose": "Close",
        "notValidAmount": "Amount is not valid number",
        "amountBelow10": "Amount must be at least 10 TON",
        "needPersonalAddress": "Please enter YOUR address to receive",
        "toncoinBalance": "You have only <BALANCE> TONCOIN",
        "installMetamask": "Please install MetaMask",
        "wrongProviderNetwork": "Set chain to <NETWORK> in <PROVIDER>",
        "cantGetAddress": "Can't get account address",
        "providerIsDisconnected": "<PROVIDER> is disconnected"
    },

    "history": {
        "title": "Recent history",
        "recentHistory": "Recent history",
        "age": "Date",
        "amountFrom": "Amount / From (Network)",
        "amountTo": "Amount Received / To (Network)",
        "fee": "Gas / Bridge Fee",
        "status": "Status",
        "completed": "completed",
        "getToncoin": "Get TONCOIN",
        "connect": "Connect",
        "oracles": "<COUNT> of oracles",
        "notFound": "No transfers found"
    }
}
